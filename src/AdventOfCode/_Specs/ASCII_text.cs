namespace Specs.ASCII_text;

public class Parse_from_grid_regonizes_6x5_ascii
{
    [TestCase("A", @"
░██░░
█░░█░
█░░█░
████░
█░░█░
█░░█░")]
    [TestCase("B", @"
███░░
█░░█░
███░░
█░░█░
█░░█░
███░░")]
    [TestCase("C", @"
░██░░
█░░█░
█░░░░
█░░░░
█░░█░
░██░░")]
    [TestCase("D", @"
███░░
█░░█░
█░░█░
█░░█░
█░░█░
███░░")]
    [TestCase("E", @"
████░
█░░░░
███░░
█░░░░
█░░░░
████░")]
    [TestCase("F", @"
████░
█░░░░
███░░
█░░░░
█░░░░
█░░░░")]
    [TestCase("G", @"
░██░░
█░░█░
█░░░░
█░██░
█░░█░
░███░")]
    [TestCase("H", @"
█░░█░
█░░█░
████░
█░░█░
█░░█░
█░░█░")]
    [TestCase("I", @"
░███░
░░█░░
░░█░░
░░█░░
░░█░░
░███░")]
    [TestCase("J", @"
░░██░
░░░█░
░░░█░
░░░█░
█░░█░
░██░░")]
    [TestCase("K", @"
█░░█░
█░█░░
██░░░
█░█░░
█░█░░
█░░█░")]
    [TestCase("L", @"
█░░░░
█░░░░
█░░░░
█░░░░
█░░░░
████░")]
    [TestCase("M", @"
█░░░█
██░██
██░██
█░█░█
█░█░█
█░░░█")]
    [TestCase("N", @"
█░░█░
██░█░
██░█░
█░██░
█░██░
█░░█░")]
    [TestCase("O", @"
░██░░
█░░█░
█░░█░
█░░█░
█░░█░
░██░░")]
    [TestCase("P", @"
███░░
█░░█░
█░░█░
███░░
█░░░░
█░░░░")]
    [TestCase("Q", @"
░██░░
█░░█░
█░░█░
█░░█░
█░█░░
░█░█░")]
    [TestCase("R", @"
███░░
█░░█░
█░░█░
███░░
█░█░░
█░░█░")]
    [TestCase("S", @"
░███░
█░░░░
█░░░░
░██░░
░░░█░
███░░")]
    [TestCase("T", @"
░███░
░░█░░
░░█░░
░░█░░
░░█░░
░░█░░")]
    [TestCase("U", @"
█░░█░
█░░█░
█░░█░
█░░█░
█░░█░
░██░░")]
    [TestCase("V", @"
█░░░█
█░░░█
░█░█░
░█░█░
░░█░░
░░█░░")]
    [TestCase("W", @"
█░░░█
█░░░█
█░░░█
█░█░█
█░█░█
░█░█░")]
    [TestCase("X", @"
█░░░█
░█░█░
░░█░░
░░█░░
░█░█░
█░░░█")]
    [TestCase("Y", @"
█░░░█
█░░░█
░█░█░
░░█░░
░░█░░
░░█░░")]
    [TestCase("Z", @"
████░
░░░█░
░░█░░
░█░░░
█░░░░
████░")]

    [TestCase("Z", @"
████░
░░░█░
░░█░░
░█░░░
█░░░░
████░")]
    [TestCase("HELLO WORLD", @"
█░░█░████░█░░░░█░░░░░██░░░░░░░█░░░█░██░░███░░█░░░░███░
█░░█░█░░░░█░░░░█░░░░█░░█░░░░░░█░░░██░░█░█░░█░█░░░░█░░█
████░███░░█░░░░█░░░░█░░█░░░░░░█░░░██░░█░█░░█░█░░░░█░░█
█░░█░█░░░░█░░░░█░░░░█░░█░░░░░░█░█░██░░█░███░░█░░░░█░░█
█░░█░█░░░░█░░░░█░░░░█░░█░░░░░░█░█░██░░█░█░█░░█░░░░█░░█
█░░█░████░████░████░░██░░░░░░░░█░█░░██░░█░░█░████░███░")]
    public void Text(string text, string pixels)
    {
        var grid = pixels.CharPixels().Grid(ch => ch == '█');
        var ascii_text = AsciiText.Parse(grid);
        ascii_text.ToString().Should().Be(text);
    }
}
